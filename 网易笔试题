1 积木（每个积木的高度为1）搭建不同高度的楼层 例如 1 2 3  4 5  这时候定义楼层的不稳定性（最高楼层-最低楼层）是 5 -1 =4
2 为了提高稳定性 可以从任意一个楼层 取下一块积木 放在另外一个楼上 例如 从5中取1  1中加1 这时候高度为 2 2 3 4 4 不稳定性改为2
3  每次操作不能把积木放在所取积木的楼层 
 ：：：：请问 经过不大于k步操作后，稳定性是多少？
 
 第一行输入 n k
 第二行输入 n个数（每个楼层高度）
 输出不稳定性数值
 eg
 输入：
 5 1
 1 2 3 4 5
 输出
 2
 
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int main() {
	vector<int> res = { 1,2,3,4,5,6 };
	sort(res.begin(), res.end());
	int last = res.size()-1;
	int first = 0;
	int i = 1;
	int j = last;
	int k = 5;
	while (k > 0) {
		k--;
		if (abs(res[0] - res[last])<=1) break;

		res[0]+=1;
		res[last] -= 1;
		while ( j >= 1&&res[j - 1] >res[j] ){
			swap(res[j - 1], res[j]);
		    j--;
	    }
		while (i<last&&res[i-1] > res[i]) {
			swap(res[i -1], res[i]);
			i++;
		}
		 i = 1;
		 j = last;
		
	}
	cout<< abs(res[last] - res[0]);
	system("pause");

}
