#include<iostream>
using namespace std;
#include<string>
int Get_dp(string st1,string st2)
{
    int len1=st1.length();
    int len2=st2.length();
    
    int dp[len1][len2]={0};
    dp[0][0]= st1==st2?1:0;
    //初试化边界
    for(int i=1;i<len2;i++)
    {
        dp[0][i]= max(st1[0]==st2[i]?1:dp[0][0],dp[0][i-1]);
    }
    for(int i=1;i<len1;i++)
    {
        dp[i][0]= max(st1[i]==st2[0]?1:dp[0][0],dp[i-1][0]);
    }
    for(int i=1;i<len1;i++)
    {
        for(int j=1;j<len2;j++)
        {
            dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
            if(st1[i]==st2[j])
            {
                dp[i][j]=max(dp[i-1][j],dp[i-1][j-1]+1);
            }
        }
    }
    return dp[len1-1][len2-1];
}
int main()
{
   string str1="adfadsfasdg";
   string str2="adfads";
   int res =Get_dp(str1,str2);
   cout<<"str1: "<<str1<<endl;
   cout<<"str2: "<<str2<<endl;
   cout<<"公共子序列长度: "<<res<<endl;
}
