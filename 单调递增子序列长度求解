#include<iostream>
using namespace std;
//暴力方法 求以每个位置结尾时的最长子序列长度//
//复杂度为 O(N2)  //
void Get_Arr1(int ar[],int dp[],int len){

    for(int i=0;i<len;++i){
        dp[i]=1;
        int j=0;
        for(;j<i;j++){
            if(ar[i]>ar[j])
                dp[i]=max(dp[j]+1,dp[i]);
        }
    }
}
//添加辅助数组 //
//复杂度O(NlogN)//
void Get_Arr2(int ar[],int dp[],int len){
    int help[len]={0};
    int right =0;
    int l=0;
    int r=0;
    int m=0;
    for(int i=1;i<len;++i){
            l=0;
            r=right;
        while(l<=r){
            m=(l+r)/2;
            if(ar[i]>help[m])
                l=m+1;
            else
                r=m-1;
        }
        right=max(right,l);
        help[l]=ar[i];
        dp[i]=l+1;
    }

}
int main(){
    int arr[]={1,3,5,6,4,8,9,7,4};
    int len =sizeof(arr)/sizeof(int);
    int dp[len]={0};
    Get_Arr1(arr,dp,len);
    cout<<dp[0]<<dp[1]<<dp[2]<<dp[3]<<dp[4]<<endl;
    Get_Arr2(arr,dp,len);
    cout<<dp[0]<<dp[1]<<dp[2]<<dp[3]<<dp[4]<<endl;
return 0;
}
